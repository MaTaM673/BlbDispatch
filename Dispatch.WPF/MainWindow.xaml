<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="clr-namespace:Dispatch.WPF.Controls"
        xmlns:viewModels="clr-namespace:Dispatch.WPF.ViewModels"
        xmlns:converters="clr-namespace:Dispatch.WPF.Converters"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        x:Class="Dispatch.WPF.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="1080" Width="1920"
        Background="DarkGray">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <!--<Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                                        CornerRadius="20"
                                        GlassFrameThickness="0"
                                        NonClientFrameEdges="None"
                                        ResizeBorderThickness="5"
                    />
                </Setter.Value>
            </Setter>-->
        </Style>
    </Window.Style>
    <Window.Resources>
        <converters:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter"/>
        <viewModels:MainWindowViewModel x:Key="ViewModel" />
        <CollectionViewSource Source="{Binding ActiveUnits}" x:Key="ActiveUnitsView">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="FullName" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <Style x:Key="LeftScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>

                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Expander" x:Key="CustomExpanderStyle" >
            <Style.Resources>
                <ResourceDictionary />
            </Style.Resources>
            <Setter Property="TextElement.Foreground">
                <Setter.Value>
                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                </Setter.Value>
            </Setter>
            <Setter Property="Panel.Background">
                <Setter.Value>
                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.HorizontalContentAlignment">
                <Setter.Value>
                    <x:Static Member="HorizontalAlignment.Stretch" />
                </Setter.Value>
            </Setter>
            <Setter Property="Control.VerticalContentAlignment">
                <Setter.Value>
                    <x:Static Member="VerticalAlignment.Stretch" />
                </Setter.Value>
            </Setter>
            <Setter Property="Border.BorderBrush">
                <Setter.Value>
                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Border.BorderThickness">
                <Setter.Value>
                    <Thickness>1,1,1,1</Thickness>
                </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                            <DockPanel>
                                <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" Foreground="{TemplateBinding TextElement.Foreground}" FontFamily="{TemplateBinding TextElement.FontFamily}" FontSize="{TemplateBinding TextElement.FontSize}" FontStretch="{TemplateBinding TextElement.FontStretch}" FontStyle="{TemplateBinding TextElement.FontStyle}" FontWeight="{TemplateBinding TextElement.FontWeight}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Padding="{TemplateBinding Control.Padding}" Name="HeaderSite" MinWidth="0" MinHeight="0" Margin="1,1,1,1" DockPanel.Dock="Top">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="{TemplateBinding Control.Padding}">
                                                            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="19" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <Path Grid.Column="0" Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF333333" StrokeThickness="2" Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" />
                                                                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ToggleButton.IsChecked">
                                                                <Setter Property="Path.Data" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <StreamGeometry>M1,4.5L4.5,1 8,4.5</StreamGeometry>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsMouseOver">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="ButtonBase.IsPressed">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsEnabled">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF707070</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>False</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                    <ToggleButton.FocusVisualStyle>
                                        <Style TargetType="IFrameworkInputElement">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border>
                                                            <Rectangle Stroke="#FF000000" StrokeThickness="1" StrokeDashArray="1 2" Margin="0,0,0,0" SnapsToDevicePixels="True" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.FocusVisualStyle>
                                </ToggleButton>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="ExpandSite" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Collapsed" Focusable="False" DockPanel.Dock="Bottom" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Expander.IsExpanded">
                                <Setter Property="UIElement.Visibility" TargetName="ExpandSite">
                                    <Setter.Value>
                                        <x:Static Member="Visibility.Visible" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="Expander.ExpandDirection">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite">
                                    <Setter.Value>
                                        <x:Static Member="Dock.Right" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite">
                                    <Setter.Value>
                                        <x:Static Member="Dock.Left" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
                                    <Setter.Value>
                                        <Style TargetType="ToggleButton">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="VerticalAlignment" Value="Top" />
                                            <Setter Property="Margin" Value="1,10,1,10" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="1,8" Margin="0,10">
                                                            <Border.Background>
                                                                <SolidColorBrush Color="White" Opacity="0.5" />
                                                            </Border.Background>
                                                            <Grid SnapsToDevicePixels="False">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="19" />
                                                                    <RowDefinition Height="*" />
                                                                </Grid.RowDefinitions>
                                                                <Grid>
                                                                    <Grid.LayoutTransform>
                                                                        <TransformGroup>
                                                                            <TransformGroup.Children>
                                                                                <RotateTransform Angle="-90" />
                                                                            </TransformGroup.Children>
                                                                        </TransformGroup>
                                                                    </Grid.LayoutTransform>
                                                                    <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF333333" StrokeThickness="2" Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" />
                                                                </Grid>
                                                                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ToggleButton.IsChecked">
                                                                <Setter Property="Path.Data" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <StreamGeometry>M1,4.5L4.5,1 8,4.5</StreamGeometry>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsMouseOver">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="ButtonBase.IsPressed">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsEnabled">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF707070</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>False</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <x:Static Member="ExpandDirection.Right" />
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="Expander.ExpandDirection">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite">
                                    <Setter.Value>
                                        <x:Static Member="Dock.Top" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite">
                                    <Setter.Value>
                                        <x:Static Member="Dock.Bottom" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
                                    <Setter.Value>
                                        <Style TargetType="ToggleButton">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="VerticalAlignment" Value="Top" />
                                            <Setter Property="Margin" Value="1,10,1,1" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="{TemplateBinding Control.Padding}">
                                                            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="19" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <Grid>
                                                                    <Grid.LayoutTransform>
                                                                        <TransformGroup>
                                                                            <TransformGroup.Children>
                                                                                <RotateTransform Angle="180" />
                                                                            </TransformGroup.Children>
                                                                        </TransformGroup>
                                                                    </Grid.LayoutTransform>
                                                                    <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF333333" StrokeThickness="2" Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" />
                                                                </Grid>
                                                                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ToggleButton.IsChecked">
                                                                <Setter Property="Path.Data" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <StreamGeometry>M1,4.5L4.5,1 8,4.5</StreamGeometry>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsMouseOver">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="ButtonBase.IsPressed">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsEnabled">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF707070</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>False</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <x:Static Member="ExpandDirection.Up" />
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="Expander.ExpandDirection">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite">
                                    <Setter.Value>
                                        <x:Static Member="Dock.Left" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite">
                                    <Setter.Value>
                                        <x:Static Member="Dock.Right" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
                                    <Setter.Value>
                                        <Style TargetType="ToggleButton">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="VerticalAlignment" Value="Top" />
                                            <Setter Property="Margin" Value="1,10,1,10" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="1,8" Margin="0,10">
                                                            <Border.Background>
                                                                <SolidColorBrush Color="White" Opacity="0.5" />
                                                            </Border.Background>
                                                            <Grid SnapsToDevicePixels="False">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="19" />
                                                                    <RowDefinition Height="*" />
                                                                </Grid.RowDefinitions>
                                                                <Grid>
                                                                    <Grid.LayoutTransform>
                                                                        <TransformGroup>
                                                                            <TransformGroup.Children>
                                                                                <RotateTransform Angle="90" />
                                                                            </TransformGroup.Children>
                                                                        </TransformGroup>
                                                                    </Grid.LayoutTransform>
                                                                    <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF333333" StrokeThickness="2" Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" />
                                                                </Grid>
                                                                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ToggleButton.IsChecked">
                                                                <Setter Property="Path.Data" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <StreamGeometry>M1,4.5L4.5,1 8,4.5</StreamGeometry>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsMouseOver">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="ButtonBase.IsPressed">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF000000</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>True</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsEnabled">
                                                                <Setter Property="Shape.Stroke" TargetName="arrow">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FF707070</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <s:Boolean>False</s:Boolean>
                                                                </Trigger.Value>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <x:Static Member="ExpandDirection.Left" />
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <StaticResource ResourceKey="ViewModel" />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" MinHeight="30" />
            <!--<RowDefinition Height="10" />-->
            <!--<RowDefinition Height="*" MinHeight="30" />-->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Menu HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.ColumnSpan="50" Background="{x:Static SystemColors.MenuBrush}" Padding="5">
            <MenuItem Header="Roster" ItemsSource="{Binding AvailableUnits}" Foreground="{x:Static SystemColors.MenuTextBrush}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{Binding ActivateUnitCommand, Source={StaticResource ViewModel}}"/>
                        <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="Header" Value="{Binding FullName}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="Scenes">
                <MenuItem Header="New" Command="{Binding NewSceneCommand}" />
            </MenuItem>
        </Menu>

        <!-- Map -->
        <controls:ZoomBorder x:Name="ZoomBorder" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" ClipToBounds="True" Background="Black">
            <Canvas x:Name="Canvas" Width="6144" Height="9216">
                <Image Source="{Binding MapImage}" Width="6144" Height="9216" />
                <!-- Current location -->
                <ItemsControl ItemsSource="{Binding ActiveUnits}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Visibility" Value="{Binding CurrentPosition, Converter={StaticResource ObjectToVisibilityConverter}}"></Setter>
                            <!-- ReSharper disable Xaml.PossibleNullReferenceException -->
                            <Setter Property="Canvas.Left" Value="{Binding CurrentPosition.MapPositionX}"/>
                            <Setter Property="Canvas.Top" Value="{Binding CurrentPosition.MapPositionY}"/>
                            <!-- ReSharper restore Xaml.PossibleNullReferenceException -->
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="150" Width="150" ClipToBounds="False">
                                <Image Source="/Resources/Images/CarTokenTr.png" />
                                <TextBlock Text="{Binding CallSign}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="28" FontWeight="Bold" Margin="0,20,3,0" />
                                <Ellipse Visibility="{Binding CurrentState, Converter={StaticResource ObjectToVisibilityConverter}}" Height="15" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,50,20,0">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{Binding CurrentState.Color}" />
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <!-- Line -->
                <ItemsControl ItemsSource="{Binding ActiveUnits}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Visibility" Value="{Binding Destination, Converter={StaticResource ObjectToVisibilityConverter}}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Line Visibility="{Binding Destination, Converter={StaticResource ObjectToVisibilityConverter}}" 
                                  X1="{Binding CurrentPosition.Position.X}" 
                                  Y1="{Binding CurrentPosition.Position.Y}"
                                  X2="{Binding Destination.Position.X}" 
                                  Y2="{Binding Destination.Position.Y}"
                                  StrokeThickness="5"
                                  Stroke="Red" 
                                  Opacity="0.6"
                                  StrokeDashArray="10,10"
                                  StrokeEndLineCap="Triangle"
                                  StrokeDashCap="Round" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <!-- Destination -->
                <ItemsControl ItemsSource="{Binding ActiveUnits}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Canvas.Left" Value="{Binding Destination.MapPositionX}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Destination.MapPositionY}"/>
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter Property="Visibility" Value="{Binding Destination, Converter={StaticResource ObjectToVisibilityConverter}}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="150" Width="150" ClipToBounds="False">
                                <Image Source="/Resources/Images/CarTokenTr.png" />
                                <TextBlock Text="{Binding CallSign}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="28" FontWeight="Bold" Margin="0,20,3,0" />
                                <Ellipse Height="15" Width="15" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,50,20,0">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{Binding CurrentState.Color}" />
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Canvas>
        </controls:ZoomBorder>

        <!-- Active units list -->
        <Expander Grid.Column="0" Grid.Row="1" ExpandDirection="Left" HorizontalAlignment="Left" Style="{StaticResource CustomExpanderStyle}" IsExpanded="True">
            <Expander.HeaderTemplate>
                <DataTemplate>
                    <Grid>
                        <TextBlock Text="Active Units">
                            <TextBlock.LayoutTransform>
                                <RotateTransform CenterX="0.5" CenterY="0.5" Angle="-90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </Expander.HeaderTemplate>
            <ScrollViewer Style="{StaticResource LeftScrollViewer}" VerticalScrollBarVisibility="Auto" Width="350" >
                <ScrollViewer.Background>
                    <SolidColorBrush Color="White" Opacity="0.5" />
                </ScrollViewer.Background>
                <ItemsControl ItemsSource="{Binding Source={StaticResource ActiveUnitsView}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Padding="5">
                                <Grid Background="LightGray">
                                    <Grid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Change status">
                                                <MenuItem Header="10-6" Command="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                                <MenuItem Header="10-7" Command="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                                <MenuItem Header="10-8" Command="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                                <MenuItem Header="10-17" Command="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" IsTextSearchEnabled="True" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                                    <MenuItem.ItemContainerStyle>
                                                        <Style TargetType="{x:Type MenuItem}">
                                                            <Setter Property="Command" Value="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" />
                                                            <Setter Property="CommandParameter" Value="{Binding  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}" />
                                                        </Style>
                                                    </MenuItem.ItemContainerStyle>
                                                    <MenuItem>
                                                        <MenuItem.Header>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="Location" />
                                                                <TextBox Width="50" Text="{Binding NewUnitPosition, Source={StaticResource ViewModel}}" />
                                                                <Button Command="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}" Content="&gt;"/>
                                                            </StackPanel>
                                                        </MenuItem.Header>
                                                    </MenuItem>
                                                </MenuItem>
                                                <MenuItem Header="10-23" Command="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                                <MenuItem Header="10-50" Command="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                                <MenuItem Header="Down" Command="{Binding ChangeStatusCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                            </MenuItem>
                                            <MenuItem Header="Set position">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox Width="50" Text="{Binding NewUnitPosition, Source={StaticResource ViewModel}}" />
                                                    <Button Command="{Binding ChangePositionCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}" Content="&gt;"/>
                                                </StackPanel>
                                            </MenuItem>
                                            <MenuItem Header="Set destination">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox Width="50" Text="{Binding NewUnitPosition, Source={StaticResource ViewModel}}" />
                                                    <Button Command="{Binding ChangeDestinationCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}" Content="&gt;"/>
                                                </StackPanel>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.RowSpan="2" Text="{Binding FullName}" VerticalAlignment="Center" Margin="5,0" />
                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding CurrentState.Name}" HorizontalAlignment="Center" Padding="8,1" Margin="5">
                                        <TextBlock.Background>
                                            <SolidColorBrush Color="{Binding CurrentState.Color}" />
                                        </TextBlock.Background>
                                    </TextBlock>
                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5">
                                        <TextBlock Text="{Binding CurrentPosition.Id}" />
                                        <TextBlock Visibility="{Binding Destination, Converter={StaticResource ObjectToVisibilityConverter}}" ><Run Text="=&gt;"/></TextBlock>
                                        <TextBlock Visibility="{Binding Destination, Converter={StaticResource ObjectToVisibilityConverter}}" Text="{Binding Destination.Id}" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Expander>

        <!-- Active scenes -->
        <Expander Grid.Row="1" Grid.Column="2" ExpandDirection="Right" HorizontalAlignment="Right" Style="{StaticResource CustomExpanderStyle}" IsExpanded="True">
            <Expander.HeaderTemplate>
                <DataTemplate>
                    <Grid>
                        <TextBlock Text="Active Scenes">
                            <TextBlock.LayoutTransform>
                                <RotateTransform CenterX="0.5" CenterY="0.5" Angle="-90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </Expander.HeaderTemplate>
            <ScrollViewer VerticalScrollBarVisibility="Auto" Width="350">
                <ScrollViewer.Background>
                    <SolidColorBrush Color="White" Opacity="0.5" />
                </ScrollViewer.Background>
                <ItemsControl ItemsSource="{Binding ActiveScenes}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Expander Header="{Binding Title}" HorizontalAlignment="Stretch" Background="LightGray" Margin="5" Padding="5" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <controls:ActiveScene 
                                        AvailableUnits="{Binding ActiveUnits, Source={StaticResource ViewModel}}" 
                                        CurrentScene="{Binding DataContext, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" 
                                        Postals="{Binding AllPostal, Source={StaticResource ViewModel}}" />
                                    <Button Grid.Row="1" Command="{Binding ResolveSceneCommand, Source={StaticResource ViewModel}}" CommandParameter="{Binding}" Margin="5">Resolve</Button>
                                </Grid>
                            </Expander>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Expander>

        <Popup Grid.Row="1" Grid.Column="0" StaysOpen="True" Placement="Center" PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" IsOpen="{Binding EventWindowOpen, Source={StaticResource ViewModel}}">
            <Popup.Effect>
                <DropShadowEffect/>
            </Popup.Effect>
            <Border Background="White" Padding="5" Width="512">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <controls:ActiveScene 
                    AvailableUnits="{Binding ActiveUnits, Source={StaticResource ViewModel}}" 
                    CurrentScene="{Binding SelectedScene, Source={StaticResource ViewModel}}" 
                    Postals="{Binding AllPostal, Source={StaticResource ViewModel}}" />
                    <Button Grid.Row="1" Width="50" HorizontalAlignment="Left" Content="Cancel" Command="{Binding CloseEventWindow, Source={StaticResource ViewModel}}" />
                    <Button Grid.Row="1" Padding="5" HorizontalAlignment="Right" Content="Create Scene" Command="{Binding AddActiveSceneCommand, Source={StaticResource ViewModel}}" />
                </Grid>
            </Border>
        </Popup>
    </Grid>
</Window>
